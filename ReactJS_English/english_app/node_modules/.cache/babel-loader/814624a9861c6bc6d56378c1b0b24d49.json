{"ast":null,"code":"import _toConsumableArray from\"/home/hainam/reactjs_eng_web/ReactJS_English/english_app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/hainam/reactjs_eng_web/ReactJS_English/english_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useMultiAudio=function useMultiAudio(urls){var _useState=useState(urls.map(function(url){return{// url,\naudio:new Audio(url)};})),_useState2=_slicedToArray(_useState,1),sources=_useState2[0];var _useState3=useState(urls.map(function(url){return{// url,\nplaying:false};})),_useState4=_slicedToArray(_useState3,2),players=_useState4[0],setPlayers=_useState4[1];var toggle=function toggle(targetIndex){return function(){var newPlayers=_toConsumableArray(players);var currentIndex=players.findIndex(function(p){return p.playing===true;});if(currentIndex!==-1&&currentIndex!==targetIndex){newPlayers[currentIndex].playing=false;newPlayers[targetIndex].playing=true;}else if(currentIndex!==-1){newPlayers[targetIndex].playing=false;}else{newPlayers[targetIndex].playing=true;}setPlayers(newPlayers);};};useEffect(function(){sources.forEach(function(source,i){players[i].playing?source.audio.play():source.audio.pause();});},[sources,players]);useEffect(function(){sources.forEach(function(source,i){source.audio.addEventListener('ended',function(){var newPlayers=_toConsumableArray(players);newPlayers[i].playing=false;setPlayers(newPlayers);});});return function(){sources.forEach(function(source,i){source.audio.removeEventListener('ended',function(){var newPlayers=_toConsumableArray(players);newPlayers[i].playing=false;setPlayers(newPlayers);});});};},[]);return[players,toggle];};var MultiPlayer=function MultiPlayer(_ref){var urls=_ref.urls;var _useMultiAudio=useMultiAudio(urls),_useMultiAudio2=_slicedToArray(_useMultiAudio,2),players=_useMultiAudio2[0],toggle=_useMultiAudio2[1];return/*#__PURE__*/_jsx(\"div\",{children:players.map(function(player,i){return/*#__PURE__*/_jsx(Player,{player:player,toggle:toggle(i)},i);})});};var Player=function Player(_ref2){var player=_ref2.player,toggle=_ref2.toggle;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Stream URL: \",player.url]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggle,children:player.playing?'Pause':'Play'})]});};export default MultiPlayer;","map":{"version":3,"sources":["/home/hainam/reactjs_eng_web/ReactJS_English/english_app/src/MultiPlayer.js"],"names":["React","useState","useEffect","useMultiAudio","urls","map","url","audio","Audio","sources","playing","players","setPlayers","toggle","targetIndex","newPlayers","currentIndex","findIndex","p","forEach","source","i","play","pause","addEventListener","removeEventListener","MultiPlayer","player","Player"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst useMultiAudio = urls => {\n  const [sources] = useState(\n    urls.map(url => {\n      return {\n        // url,\n        audio: new Audio(url),\n      }\n    }),\n  )\n\n  const [players, setPlayers] = useState(\n    urls.map(url => {\n      return {\n        // url,\n        playing: false,\n      }\n    }),\n  )\n\n  const toggle = targetIndex => () => {\n    const newPlayers = [...players]\n    const currentIndex = players.findIndex(p => p.playing === true)\n    if (currentIndex !== -1 && currentIndex !== targetIndex) {\n      newPlayers[currentIndex].playing = false\n      newPlayers[targetIndex].playing = true\n    } else if (currentIndex !== -1) {\n      newPlayers[targetIndex].playing = false\n    } else {\n      newPlayers[targetIndex].playing = true\n    }\n    setPlayers(newPlayers)\n  }\n\n  useEffect(() => {\n    sources.forEach((source, i) => {\n      players[i].playing ? source.audio.play() : source.audio.pause()\n    })\n  }, [sources, players])\n\n  useEffect(() => {\n    sources.forEach((source, i) => {\n      source.audio.addEventListener('ended', () => {\n        const newPlayers = [...players]\n        newPlayers[i].playing = false\n        setPlayers(newPlayers)\n      })\n    })\n    return () => {\n      sources.forEach((source, i) => {\n        source.audio.removeEventListener('ended', () => {\n          const newPlayers = [...players]\n          newPlayers[i].playing = false\n          setPlayers(newPlayers)\n        })\n      })\n    }\n  }, [])\n\n  return [players, toggle]\n}\n\nconst MultiPlayer = ({ urls }) => {\n  const [players, toggle] = useMultiAudio(urls)\n\n  return (\n    <div>\n      {players.map((player, i) => (\n        <Player key={i} player={player} toggle={toggle(i)} />\n      ))}\n    </div>\n  )\n}\n\nconst Player = ({ player, toggle }) => (\n  <div>\n    <p>Stream URL: {player.url}</p>\n    <button onClick={toggle}>{player.playing ? 'Pause' : 'Play'}</button>\n  </div>\n)\n\n\nexport default MultiPlayer"]},"metadata":{},"sourceType":"module"}